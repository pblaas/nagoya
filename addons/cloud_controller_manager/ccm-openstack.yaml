---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cloud-controller-manager
  name: cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: cloud-controller-manager
    spec:
      serviceAccountName: cloud-controller-manager
      containers:
      - name: cloud-controller-manager
        # for in-tree providers we use k8s.gcr.io/cloud-controller-manager
        # this can be replaced with any other image for out-of-tree providers
        image: k8s.gcr.io/cloud-controller-manager:v1.8.0
        command:
        - /usr/local/bin/cloud-controller-manager
        - --cloud-provider=openstack  # Add your own cloud provider here!
        - --cloud-config=/etc/kubernetes/cloud.conf
        - --leader-elect=true
        - --use-service-account-credentials
        - --root-ca-file=/etc/kubernetes/ssl/ca.pem
        - --kubeconfig=/etc/kubernetes/master-kubeconfig.yaml
        - --v={{ apidebuglevel }}
        - --node-monitor-grace-period=120s
        - --node-monitor-period=10s
        # these flags will vary for every cloud provider
        volumeMounts:
        - mountPath: /etc/kubernetes/ssl/ca.pem
          name: ca_pem
        - mountPath: /etc/kubernetes/master-kubeconfig.yaml
          name: kubeconfig
        - mountPath: /etc/kubernetes/cloud.conf
          name: cloudconfig
      volumes:                                      
      - name: ca_pem                                  
          hostPath:
            path: /etc/kubernetes/ssl/ca.pem
      - name: kubeconfig
          hostPath:
            path: /etc/kubernetes/master-kubeconfig.yaml
      - name: cloudconfig
          hostPath:
            path: /etc/kubernetes/cloud.conf
      tolerations:
      # this is required so CCM can bootstrap itself
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      # this is to have the daemonset runnable on master nodes
      # the taint may vary depending on your cluster setup
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      # this is to restrict CCM to only run on master nodes
      # the node selector may vary depending on your cluster setup
      nodeSelector:
        node-role.kubernetes.io/master: ""
